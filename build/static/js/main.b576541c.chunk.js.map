{"version":3,"sources":["components/List.js","components/Table.js","components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["List","props","data","imgData","loader","Spinner","animation","role","className","type","src","alt","TableData","console","log","countData","Table","striped","bordered","hover","size","Object","entries","map","index","booklist","name","url","Search","useState","isLoading","setIsLoading","isImageLoading","setimageLoading","searchUrl","setSearchUrl","setimgData","setCountData","onsubmit","imgurl","trim","axios","get","headers","then","response","catch","err","countUrl","onreset","list","placeholder","onChange","e","target","value","id","book","idx","Button","onClick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b576541c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nexport default function List(props) {\r\n  const data = props.imgData;\r\n  const loader = props.loader;\r\n\r\n  return (\r\n    <div>\r\n      {loader && (\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      )}\r\n      {!loader && (\r\n        <div className=\"image\">\r\n          <embed type=\"image/svg+xml\" src={data} alt=\"responseChart\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nexport default function TableData(props) {\r\n  console.log(props.countData);\r\n  const loader = props.loader;\r\n  return (\r\n    <div>\r\n      {loader && (\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      )}\r\n      {!loader && props && props.countData && (\r\n        <Table striped bordered hover size=\"sm\">\r\n          <thead>\r\n            <th>Sentence Length</th>\r\n            <th>Number of Occurence</th>\r\n          </thead>\r\n          <tbody>\r\n            {Object.entries(props.countData).map((data, index) => {\r\n              return (\r\n                <tr key={index}>\r\n                  <td>{data[0]}</td>\r\n                  <td>{data[1]}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport List from \"./List\";\r\nimport TableData from \"./Table\";\r\nimport axios from \"axios\";\r\nimport \"./Search.css\";\r\nimport { Button, Spinner } from \"react-bootstrap\";\r\n\r\nconst booklist = [\r\n  {\r\n    name: \"Moby-Dick; or, The Whale by Herman Melville\",\r\n    url: \"https://dev.gutenberg.org/files/15/15-0.txt\",\r\n  },\r\n  {\r\n    name: \"Pride and Prejudice by Jane Austen\",\r\n    url: \"https://dev.gutenberg.org/files/1342/1342-0.txt\",\r\n  },\r\n  {\r\n    name: \"The Scarlet Letter by Nathaniel Hawthorne\",\r\n    url: \"https://dev.gutenberg.org/files/25344/25344-0.txt\",\r\n  },\r\n  {\r\n    name: \"A Tale of Two Cities by Charles Dickens\",\r\n    url: \"https://dev.gutenberg.org/files/98/98-0.txt\",\r\n  },\r\n  {\r\n    name: \"Medicine in the Middle Ages by Edmond Dupouy\",\r\n    url: \"https://www.gutenberg.org/files/63938/63938-0.txt\",\r\n  },\r\n  {\r\n    name: \"Strange Exodus by Robert Abernathy\",\r\n    url: \"http://www.gutenberg.org/cache/epub/63936/pg63936.txt\",\r\n  },\r\n  {\r\n    name: \"The Lost Tribes Of Venus by Erik Fennel\",\r\n    url: \"http://www.gutenberg.org/cache/epub/63932/pg63932.txt\",\r\n  },\r\n];\r\nexport default function Search() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isImageLoading, setimageLoading] = useState(false);\r\n  const [searchUrl, setSearchUrl] = useState(\"\");\r\n  const [imgData, setimgData] = useState(null);\r\n  const [countData, setCountData] = useState(null);\r\n  onsubmit = () => {\r\n    setIsLoading(true);\r\n    setimageLoading(true);\r\n\r\n    const imgurl =\r\n      \"https://us-central1-goutham-gopal.cloudfunctions.net/get_histogram?url=\" +\r\n      searchUrl.trim();\r\n    axios\r\n      .get(imgurl, {\r\n        headers: { \"content-type\": \"application/json\" },\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        setimgData(response.data);\r\n        setimageLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    const countUrl =\r\n      \"https://us-central1-goutham-gopal.cloudfunctions.net/get_count?url=\" +\r\n      searchUrl.trim();\r\n\r\n    axios\r\n      .get(countUrl, {\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        setCountData(response.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    setIsLoading(false);\r\n  };\r\n\r\n  onreset = () => {\r\n    setSearchUrl(\"\");\r\n    setimgData(null);\r\n    setCountData(null);\r\n  };\r\n  return (\r\n    <div>\r\n      <section className=\"input\">\r\n        <h2 className=\"header\">Sentence Distribution</h2>\r\n        <section className=\"searchBar\">\r\n          <input\r\n            list=\"booklist\"\r\n            type=\"text\"\r\n            placeholder=\"Enter any url for a book or select from the list.\"\r\n            onChange={(e) => {\r\n              setSearchUrl(e.target.value);\r\n            }}\r\n            value={searchUrl}\r\n            className=\"inputText\"\r\n          />\r\n          <datalist id=\"booklist\">\r\n            {booklist.map((book, idx) => {\r\n              return (\r\n                <option value={book.url} key={idx}>\r\n                  {book.name}\r\n                </option>\r\n              );\r\n            })}\r\n          </datalist>\r\n          <Button\r\n            type=\"submit\"\r\n            value=\"Analyze\"\r\n            onClick={() => onsubmit()}\r\n            className=\"button\"\r\n          >\r\n            Analyze\r\n          </Button>\r\n          <Button\r\n            type=\"reset\"\r\n            value=\"Reset\"\r\n            onClick={() => onreset()}\r\n            className=\"button\"\r\n          >\r\n            Reset\r\n          </Button>\r\n        </section>\r\n      </section>\r\n\r\n      <section className=\"output\">\r\n        <section className=\"tableOutput\">\r\n          <TableData countData={countData} loader={isLoading} />\r\n        </section>\r\n        <section className=\"imgOutput\">\r\n          <List url={searchUrl} imgData={imgData} loader={isImageLoading} />\r\n        </section>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n","import Search from \"./components/Search\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Search />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}